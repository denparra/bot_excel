Option Explicit

Sub EnviarWhatsAppWebBrave3()
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim i As Long
    Dim bravePath As String
    Dim whatsappURL As String
    Dim phone As String, message As String, mensajeLog As String, imagePath As String
    Dim imgExists As Boolean
    Dim Status As String
    Dim nombre As String, auto As String, anio As String
    Dim waitSec As Integer  ' Variable para almacenar el tiempo de espera en segundos
    Dim cargaTiempo As Integer, esperaAntesTiempo As Integer
    Dim esperaPostTiempo As Integer, esperaEntreTiempo As Integer
    Dim enviosAntesPausa As Integer, pausaLargaTiempo As Integer
    Dim contadorEnvios As Integer

    Randomize ' Inicializar la semilla para números aleatorios
    
    Set ws = ThisWorkbook.Sheets("Envio")
    
    ' 1. Determinar la ruta de Brave (64-bit o 32-bit)
    bravePath = ""
    If Dir("C:\Program Files\BraveSoftware\Brave-Browser\Application\brave.exe") <> "" Then
        bravePath = "C:\Program Files\BraveSoftware\Brave-Browser\Application\brave.exe"
    ElseIf Dir("C:\Program Files (x86)\BraveSoftware\Brave-Browser\Application\brave.exe") <> "" Then
        bravePath = "C:\Program Files (x86)\BraveSoftware\Brave-Browser\Application\brave.exe"
    Else
        MsgBox "No se encontró el navegador Brave en el sistema." & vbCrLf & _
               "Por favor verifique la instalación de Brave.", vbExclamation
        Exit Sub
    End If
    
    ' Última fila con datos en la hoja "Envio"
    lastRow = ws.Cells(ws.Rows.Count, "C").End(xlUp).Row

    ' Configuración de intervalos y contador de envíos
    enviosAntesPausa = GetIntervalo("EnviosAntesDePausa")
    contadorEnvios = 0

    ' Recorrer desde la fila 6 hasta la última fila con datos
    For i = 6 To lastRow
        On Error GoTo ManejarError  ' Manejo de errores

        Status = UCase(Trim(ws.Cells(i, "G").Value)) ' Leer Status en columna G

        ' SOLO PROCESAR SI STATUS = "ENVIAR"
        If Status = "ENVIAR" Then
            phone = Trim(ws.Cells(i, "C").Value)    ' Número de teléfono en columna C
            mensajeLog = Trim(ws.Cells(i, "A").Value)    ' Mensaje base en columna A
            message = mensajeLog
            
            ' Validar que el mensaje no esté vacío
            If message = "" Then
                ws.Cells(i, "I").Value = "Error: Mensaje vacío"
                GoTo SiguienteCliente
            End If
            
            ' 2.1 Opcional: Obtener nombre, auto y año si existen
            nombre = Trim(ws.Cells(i, "D").Value)    ' Columna D (Nombre)
           ' auto = Trim(ws.Cells(i, "E").Value)      ' Columna E (Auto)
           ' anio = Trim(ws.Cells(i, "F").Value)      ' Columna F (Año)

            ' 2.2 Agregar datos adicionales al mensaje si existen
            If nombre <> "" Then
                mensajeLog = "Hola " & nombre & ", " & mensajeLog
                message = "Hola " & nombre & ", " & message
            End If
           ' If auto <> "" Then message = message & vbCrLf & "Vehículo: " & auto
           ' If anio <> "" Then message = message & " - Año: " & anio

            ' 2.3 Codificar caracteres especiales para URL
            message = EncodeURL(message)
            
            ' 3. Si hay imagen adjunta, copiarla al portapapeles si existe
           '  imagePath = Trim(ws.Cells(i, "H").Value) ' Columna H = ruta de imagen
           '  imgExists = False
           '  If imagePath <> "" Then
           '      If Dir(imagePath) <> "" Then
           '          imgExists = True
                    ' Copiar archivo al portapapeles (solo si existe)
           '         Shell "cmd /c type """ & imagePath & """ | clip", vbHide
            '     Else
                    ' Registrar error en la hoja y seguir con el envío sin imagen
           '          ws.Cells(i, "I").Value = "Imagen no encontrada: " & imagePath
           '          imgExists = False
           '      End If
           '  End If
            
            ' 3. Construcción de la URL para WhatsApp Web con el mensaje ya codificado
            whatsappURL = "https://web.whatsapp.com/send?phone=" & phone & "&text=" & message
            
            ' 4. Abrir Brave con la URL de WhatsApp Web
            Shell """" & bravePath & """ """ & whatsappURL & """", vbNormalFocus

            ' 5. Esperar a que WhatsApp Web cargue completamente antes de enviar teclas
            cargaTiempo = GetIntervalo("CargaWhatsApp")
            Application.Wait Now + cargaTiempo / 86400

            ' 6. Espera adicional antes de enviar
            esperaAntesTiempo = GetIntervalo("EsperaAntesDeEnviar")
            Application.Wait Now + esperaAntesTiempo / 86400
            
            ' 6. Enviar teclas para pegar imagen (si existe) y confirmar mensaje
           '      If imgExists Then
           '          Application.SendKeys "^v", True    ' Ctrl + V para pegar imagen
           '          ' Espera aleatoria entre 2 y 5 segundos
           '          waitSec = Int((5 - 2 + 1) * Rnd + 2)
           '          Application.Wait Now + waitSec / 86400
           '      End If
            Application.SendKeys "~", True         ' Presionar Enter para enviar mensaje
            esperaPostTiempo = GetIntervalo("EsperaPostEnvio")
            Application.Wait Now + esperaPostTiempo / 86400
            
            ' 7. Marcar como enviado en Status2 (columna H)
            ws.Cells(i, "H").Value = "Enviado"

            ' Registrar en hoja Log
            RegistrarLog i, phone, mensajeLog, cargaTiempo, esperaAntesTiempo, esperaPostTiempo, "Enviado", ""
            
            ' 8. Cerrar Brave después de cada envío
            Shell "taskkill /F /IM brave.exe", vbHide

            esperaEntreTiempo = GetIntervalo("EsperaEntreClientes")
            Application.Wait Now + esperaEntreTiempo / 86400

            contadorEnvios = contadorEnvios + 1
            If enviosAntesPausa > 0 Then
                If contadorEnvios Mod enviosAntesPausa = 0 Then
                    pausaLargaTiempo = GetIntervalo("DuracionPausaLarga")
                    Application.Wait Now + pausaLargaTiempo / 86400
                End If
            End If
        End If
        
SiguienteCliente:
        On Error GoTo 0   ' Restablecer control de errores
    Next i
    
    MsgBox "Proceso de envío finalizado.", vbInformation
    Exit Sub

ManejarError:
    ' Registrar cualquier error en la columna I (Status2)
    ws.Cells(i, "I").Value = "Error: " & Err.Description
    RegistrarLog i, phone, mensajeLog, cargaTiempo, esperaAntesTiempo, esperaPostTiempo, "Error", Err.Description
    Err.Clear
    Shell "taskkill /F /IM brave.exe", vbHide  ' Cerrar Brave si ocurrió error

    esperaEntreTiempo = GetIntervalo("EsperaEntreClientes")
    Application.Wait Now + esperaEntreTiempo / 86400
    On Error GoTo 0
    Resume Next  ' Continuar con la siguiente fila
End Sub

' Función para codificar caracteres especiales en URL
Function EncodeURL(ByVal texto As String) As String
    Dim temp As String
    temp = texto
    temp = Replace(temp, " ", "%20")    ' Espacios
    temp = Replace(temp, vbCrLf, "%0A")   ' Saltos de línea
    temp = Replace(temp, "á", "%C3%A1")   ' Letras acentuadas
    temp = Replace(temp, "é", "%C3%A9")
    temp = Replace(temp, "í", "%C3%AD")
    temp = Replace(temp, "ó", "%C3%B3")
    temp = Replace(temp, "ú", "%C3%BA")
    temp = Replace(temp, "ñ", "%C3%B1")   ' Ñ
    temp = Replace(temp, "&", "%26")      ' Ampersand &
    EncodeURL = temp
End Function

' Obtener un número aleatorio dentro del intervalo definido en la hoja Config
Function GetIntervalo(ByVal parametro As String) As Integer
    Dim wsCfg As Worksheet
    Dim fila As Variant
    Dim minVal As Double, maxVal As Double

    On Error GoTo sinValor
    Set wsCfg = ThisWorkbook.Sheets("Config")
    fila = Application.Match(parametro, wsCfg.Columns(1), 0)
    If IsError(fila) Then GoTo sinValor
    minVal = Val(wsCfg.Cells(fila, 2).Value)
    maxVal = Val(wsCfg.Cells(fila, 3).Value)
    If maxVal < minVal Then maxVal = minVal
    GetIntervalo = Int((maxVal - minVal + 1) * Rnd + minVal)
    Exit Function
sinValor:
    GetIntervalo = 0
End Function

' Registrar información de cada envío en la hoja Log
Sub RegistrarLog(ByVal fila As Long, ByVal telefono As String, ByVal mensaje As String, _
                 ByVal tCarga As Integer, ByVal tAntes As Integer, ByVal tPost As Integer, _
                 ByVal resultado As String, ByVal nota As String)
    Dim wsLog As Worksheet
    Dim r As Long

    On Error Resume Next
    Set wsLog = ThisWorkbook.Sheets("Log")
    If wsLog Is Nothing Then Exit Sub
    r = wsLog.Cells(wsLog.Rows.Count, "A").End(xlUp).Row + 1
    wsLog.Cells(r, "A").Value = Now
    wsLog.Cells(r, "B").Value = fila
    wsLog.Cells(r, "C").Value = telefono
    wsLog.Cells(r, "D").Value = mensaje
    wsLog.Cells(r, "E").Value = tCarga
    wsLog.Cells(r, "F").Value = tAntes
    wsLog.Cells(r, "G").Value = tPost
    wsLog.Cells(r, "H").Value = resultado
    wsLog.Cells(r, "I").Value = nota
End Sub

